name: CI-CD

on:
  push:
    branches:
      - "**"

jobs:
  php-test:
    name: Test PHP
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, bcmath

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Composer install
        run: |
          composer validate
          composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Copy ENV Laravel Configuration for CI
        run: php -r "file_exists('.env') || copy('.env.dist', '.env');"

      - name: Generate APP_KEY
        run: php artisan key:generate

      - name: PHPUnit
        run: composer phpunit

      # Note: Currently not compatible with PHP 8.1
      # - name: PHPCS
      #   run: composer phpcs

  assets-build:
    name: Build assets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Build assets
        run: |
          npm ci
          npm run production
          cat public/mix-manifest.json

      - name: Upload build files
        uses: actions/upload-artifact@v1
        with:
          name: assets
          path: public

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [php-test, assets-build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, bcmath

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Composer install
        run: |
          composer validate
          composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Restore build assets
        uses: actions/download-artifact@v1
        with:
          name: assets
          path: public

      - name: Build and Push Image to Docker Hub
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: distortedfusion/unraid-docker-web:latest
          push: ${{ github.ref == 'refs/heads/master' }}

      - name: Image Digest
        run: echo ${{ steps.docker_build.outputs.digest }}
